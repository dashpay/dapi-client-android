syntax = "proto3";

package org.dash.platform.dapi.v0;

service Platform {
  rpc broadcastStateTransition (BroadcastStateTransitionRequest) returns (BroadcastStateTransitionResponse);
  rpc getIdentity (GetIdentityRequest) returns (GetIdentityResponse);
  rpc getDataContract (GetDataContractRequest) returns (GetDataContractResponse);
  rpc getDocuments (GetDocumentsRequest) returns (GetDocumentsResponse);
  rpc getIdentitiesByPublicKeyHashes (GetIdentitiesByPublicKeyHashesRequest) returns (GetIdentitiesByPublicKeyHashesResponse);
  rpc getIdentityIdsByPublicKeyHashes (GetIdentityIdsByPublicKeyHashesRequest) returns (GetIdentityIdsByPublicKeyHashesResponse);
  rpc waitForStateTransitionResult (WaitForStateTransitionResultRequest) returns (WaitForStateTransitionResultResponse);
}

message Proof {
  bytes root_tree_proof = 1;
  bytes store_tree_proof = 2;
  bytes signature_llmq_hash = 3;
  bytes signature = 4;
}

message ResponseMetadata {
  uint32 height = 1;
  uint32 core_chain_locked_height = 2;
}

message StateTransitionBroadcastError {
  uint32 code = 1;
  string message = 2;
  bytes data = 3;
}

message BroadcastStateTransitionRequest {
  bytes state_transition = 1;
}

message BroadcastStateTransitionResponse {

}

message GetIdentityRequest {
  bytes id = 1;
  bool prove = 2;
}

message GetIdentityResponse {
  bytes identity = 1;
  Proof proof = 2;
  ResponseMetadata metadata = 3;
}

 message GetDataContractRequest {
  bytes id = 1;
  bool prove = 2;
}

message GetDataContractResponse {
  bytes data_contract = 1;
  Proof proof = 2;
  ResponseMetadata metadata = 3;
}

message GetDocumentsRequest {
  bytes data_contract_id = 1;
  string document_type = 2;

  bytes where = 3;
  bytes order_by = 4;

  uint32 limit = 5;

  oneof start {
    uint32 start_after = 6;
    uint32 start_at = 7;
  }

  bool prove = 8;
}

message GetDocumentsResponse {
  repeated bytes documents = 1;
  Proof proof = 2;
  ResponseMetadata metadata = 3;
}

message GetIdentitiesByPublicKeyHashesRequest {
  repeated bytes public_key_hashes = 1;
  bool prove = 2;
}

message GetIdentitiesByPublicKeyHashesResponse {
  repeated bytes identities = 1;
  Proof proof = 2;
  ResponseMetadata metadata = 3;
}

message GetIdentityIdsByPublicKeyHashesRequest {
  repeated bytes public_key_hashes = 1;
  bool prove = 2;
}

message GetIdentityIdsByPublicKeyHashesResponse {
  repeated bytes identity_ids = 1;
  Proof proof = 2;
  ResponseMetadata metadata = 3;
}

message WaitForStateTransitionResultRequest {
  bytes state_transition_hash = 1;
  bool prove = 2;
}

message WaitForStateTransitionResultResponse {
  oneof responses {
    StateTransitionBroadcastError error = 1;
    Proof proof = 2;
  }
  ResponseMetadata metadata = 3;
}
